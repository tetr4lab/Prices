@inherits ItemListBase<Book, Author>

@page "/books"

@inject NavigationManager Navi

<PageTitle>Prices Books</PageTitle>

@if (DataSet.IsUnavailable) {
    <MudAlert Severity="Severity.Error" Elevation="3">Unable to connect to any of the specified database management hosts.</MudAlert>
} else if (!DataSet.IsReady || items == null) {
    <MudProgressCircular Indeterminate="true" />
} else {
    if (items.Count > 0) {
        <MudTable Items="items" Dense Hover Striped Breakpoint="Breakpoint.Xs" @ref="_table"
            OnRowClick="EventCallback.Factory.Create<TableRowClickEventArgs<Book>> (this, arg => EditItem (arg.Item))"
            Filter="new Func<Book, bool>(FilterFunc)"
            SortLabel="⇅"
            AllowUnsorted=true
            @bind-SelectedItem="selectedItem"
            @bind-SelectedItems="selectedItems" MultiSelection="@(allowDeleteItems && isSingleSession)">
            <HeaderContent>
                <MudTh><MudTableSortLabel SortBy="new Func<Book, object>(x=>x.Id)">@Book.Label[nameof(Book.Id)]</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Book, string?>(x=>x.Title)">@Book.Label[nameof(Book.Title)]</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="@(new Func<Book, string?>(x=>string.Join(',',x.RelatedIds.ConvertAll(i=>$"{i:D5}"))))">@(Book.Label [nameof (Book.Authors)])</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Book, object>(x=>x.InterestValue)">@(Book.Label [nameof (Book.Interest)])</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Book, object>(x=>x.ActionValue)">@(Book.Label [nameof (Book.Action)])</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Book, object>(x=>x.ResultValue)">@(Book.Label [nameof (Book.Result)])</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel InitialDirection="SortDirection.Descending" SortBy="new Func<Book, object>(x=>x.PublishDate ?? new DateTime ())">@(Book.Label [nameof (Book.PublishDate)])</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Book, string?>(x=>x.Publisher)">@(Book.Label[nameof(Book.Publisher)])</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Book, string?>(x=>x.Series)">@(Book.Label[nameof(Book.Series)])</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Book, object>(x=>x.Price)">@(Book.Label[nameof(Book.Price)])</MudTableSortLabel></MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd Class="align-right text-nowrap" DataLabel="@(Book.Label[nameof(Book.Id)])">@context.Id</MudTd>
                <MudTd DataLabel="@(Book.Label[nameof(Book.Title)])">@(context.Title)<MudIconButton Href="@context.StoreURL" Target="_blank" Icon="@Icons.Material.Outlined.Search" Size="Size.Small" /></MudTd>
                <MudTd DataLabel="@(Book.Label[nameof(Book.Authors)])">@(string.Join (", ", context.Authors.OrderBy (a => a.Id).ToList ().ConvertAll (a => a.Name)))</MudTd>
                <MudTd DataLabel="@(Book.Label[nameof(Book.Interest)])">@context.Interest</MudTd>
                <MudTd DataLabel="@(Book.Label[nameof(Book.Action)])">@context.Action</MudTd>
                <MudTd DataLabel="@(Book.Label[nameof(Book.Result)])">@context.Result</MudTd>
                <MudTd Class="text-nowrap" DataLabel="@(Book.Label[nameof(Book.PublishDate)])">@(context.PublishDate?.ToShortDateString ())</MudTd>
                <MudTd DataLabel="@(Book.Label[nameof(Book.Publisher)])">@context.Publisher</MudTd>
                <MudTd DataLabel="@(Book.Label[nameof(Book.Series)])">@context.Series</MudTd>
                <MudTd Class="align-right text-nowrap" DataLabel="@(Book.Label[nameof(Book.Price)])">@($"¥{context.Price:#,0}")</MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager PageSizeOptions="_pageSizeOptions" InfoFormat="{first_item}-{last_item} / {all_items}" RowsPerPageString="行/頁:" />
            </PagerContent>
        </MudTable>
        <MudText Class="mt-2" Typo="Typo.body2" Color="Color.Success">@(DataSet.Valid ? "validated" : "")</MudText>
        <MudToolBar Dense Class="mb-2">
            @*hidden spacer*@
        </MudToolBar>
    } else {
        <MudText>No items found.</MudText>
    }
    <ItemListFooter TItem1="Book" TItem2="Author"
        AllowDeleteItems="allowDeleteItems"
        DisableSwitch="isSingleSession"
        OnChangeSwitch="@(sw => allowDeleteItems = sw)"
        DisableDelete="@(_isDeleting || !allowDeleteItems || !isSingleSession || selectedItems.Count <= 0)"
        OnDeleteItems="DeleteItems"
        DisableAdd="_isAdding"
        OnAddItem="AddItem" />
}
