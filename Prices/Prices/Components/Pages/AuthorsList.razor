@inherits ItemListBase<Author, Book>

@page "/authors"

<PageTitle>Prices Authors</PageTitle>

@if (DataSet.IsUnavailable) {
    <MudAlert Severity="Severity.Error" Elevation="3">Unable to connect to any of the specified database management hosts.</MudAlert>
} else if (!DataSet.IsReady || items == null) {
    <MudProgressCircular Indeterminate="true" />
} else {
    if (items.Count > 0) {
        <MudTable Items="items" Dense Hover Striped Breakpoint="Breakpoint.Xs" @ref="_table"
            OnRowClick="EventCallback.Factory.Create<TableRowClickEventArgs<Author>> (this, arg => EditItem (arg.Item))"
            Filter="new Func<Author, bool>(FilterFunc)"
            SortLabel="⇅"
            AllowUnsorted=true
            @bind-SelectedItem="selectedItem"
            @bind-SelectedItems="selectedItems" MultiSelection="@(allowDeleteItems && isSingleSession)">
            <HeaderContent>
                <MudTh><MudTableSortLabel SortBy="new Func<Author, object>(x=>x.Id)">@(Author.Label[nameof(Author.Id)])</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<Author, string?>(x=>x.Name)">@(Author.Label [nameof (Author.Name)])</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Author, string?>(x=>x.AdditionalName)">/</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="new Func<Author, object>(x=>x.InterestValue)">@(Author.Label [nameof (Author.Interest)])</MudTableSortLabel></MudTh>
                <MudTh><MudTableSortLabel SortBy="@(new Func<Author, string?>(x=>string.Join(',', x.RelatedIds.ConvertAll(i=>$"{i:D5}"))))">@(Author.Label [nameof (Author.Books)])</MudTableSortLabel></MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd Class="align-right text-nowrap" DataLabel="@(Author.Label[nameof(Author.Id)])">@context.Id</MudTd>
                <MudTd DataLabel="@(Author.Label[nameof(Author.Name)])">@(context.Name)<MudIconButton Href="@context.StoreURL" Target="_blank" Icon="@Icons.Material.Outlined.Search" Size="Size.Small" /></MudTd>
                <MudTd DataLabel="@(Author.Label[nameof(Author.AdditionalName)])">@context.AdditionalName</MudTd>
                <MudTd DataLabel="@(Author.Label[nameof(Author.Interest)])">@context.Interest</MudTd>
                <MudTd DataLabel="@(Author.Label[nameof(Author.Books)])">@(string.Join (", ", context.Books.OrderBy (a => a.Id).ToList ().ConvertAll (a => a.Title)))</MudTd>
            </RowTemplate>
            <PagerContent>
                <MudTablePager PageSizeOptions="_pageSizeOptions" InfoFormat="{first_item}-{last_item} / {all_items}" RowsPerPageString="行/頁:" />
            </PagerContent>
        </MudTable>
        <MudText Class="mt-2" Typo="Typo.body2" Color="Color.Success">@(DataSet.Valid ? "validated" : "")</MudText>
        <MudToolBar Dense Class="mb-2">
            @*hidden spacer*@
        </MudToolBar>
    } else {
        <MudText>No items found.</MudText>
    }
    <ItemListFooter TItem1="Author" TItem2="Book"
        AllowDeleteItems="allowDeleteItems"
        DisableSwitch="isSingleSession"
        OnChangeSwitch="@(sw => allowDeleteItems = sw)"
        DisableDelete="@(_isDeleting || !allowDeleteItems || !isSingleSession || selectedItems.Count <= 0)"
        OnDeleteItems="DeleteItems"
        DisableAdd="_isAdding"
        OnAddItem="AddItem" />
}
