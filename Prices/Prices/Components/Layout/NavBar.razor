<MudItem>
    @if (!IsHomePage) {
        <MudText Class="pr-8" Typo="Typo.h4">Prices</MudText>
    } else {
        <MudText Class="pb-2" Typo="Typo.h4">Contents</MudText>
    }
</MudItem>
@if (!IsHomePage) {
    <MudItem>
        <MudNavLink Href="./" Match="NavLinkMatch.All">
            <MudText Class="d-flex align-center gap-1" Typo="Typo.h6">
                <MudIcon Icon="@Icons.Material.Filled.PriceChange" />Prices
            </MudText>
        </MudNavLink>
    </MudItem>
}
<MudItem>
    <MudNavLink Href="products">
        <MudText Class="d-flex align-center gap-1" Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.ShoppingBasket" />Products
        </MudText>
    </MudNavLink>
</MudItem>
<MudItem>
    <MudNavLink Href="categories">
        <MudText Class="d-flex align-center gap-1" Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Category" />Categories
        </MudText>
    </MudNavLink>
</MudItem>
<MudItem>
    <MudNavLink Href="stores">
        <MudText Class="d-flex align-center gap-1" Typo="Typo.h6">
            <MudIcon Icon="@Icons.Material.Filled.Store" />Stores
        </MudText>
    </MudNavLink>
</MudItem>
@if (!IsHomePage) {
    <MudSpacer />
    @if (RevisionInfo.Valid) {
        <MudItem Class="mr-4 align-self-end">
            <MudText Typo="Typo.body2">@($"revision: {RevisionInfo.Branch} - {RevisionInfo.Id}")</MudText>
        </MudItem>
    }
    <MudItem>
        <MudStack Row Class="align-center">
            <MudTooltip Duration="1000">
                <ChildContent>
                    <MudTextField @bind-Value="_filterText" @ref="searchField"
                        OnKeyUp="OnKeyUp"
                        OnBlur="OnClick"
                        OnAdornmentClick="OnClick" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Search"
                        OnClearButtonClick="OnClick" Clearable 
                        Label="Search" Margin="Margin.Dense" Variant="Variant.Outlined" Underline="false" />
                </ChildContent>
                <TooltipContent>
                    <MudText Typo="Typo.body2" Align="Align.Left">検索文字列</MudText>
                    <MudText Typo="Typo.body2" Align="Align.Left">空白文字で区切られた部分が全て含まれると適合します。</MudText>
                    <MudText Typo="Typo.body2" Align="Align.Left">'='が先行する部分は一致すると適合します。</MudText>
                    <MudText Typo="Typo.body2" Align="Align.Left">'|'で区切られた部分はいずれか一つで適合します。</MudText>
                </TooltipContent>
            </MudTooltip>
            @if (!OnClickChangeModeButton.Equals (EventCallback.Empty)) {
                <MudIconButton Size="Size.Small" Icon="@(IsDarkMode ? Icons.Material.Filled.LightMode : Icons.Material.Filled.DarkMode)" OnClick="(async () => await OnClickChangeModeButton.InvokeAsync ())" />
            }
        </MudStack>
    </MudItem>
}

@code {
    /// <summary>サーチボタンが押されたときの処理</summary>
    [Parameter] public EventCallback<string?> OnClickSearchButton { get; set; } = EventCallback<string?>.Empty;
    /// <summary>ダークモード</summary>
    [Parameter] public bool IsDarkMode { get; set; }
    /// <summary>モード切替ボタンが押されたときの処理</summary>
    [Parameter] public EventCallback OnClickChangeModeButton { get; set; } = EventCallback.Empty;

    /// <summary>
    /// ホームページの判定
    /// サーチボタンのアクションが指定されていればナビゲーションバー
    /// 指定されなければホームページのコンテンツ
    /// </summary>
    private bool IsHomePage => OnClickSearchButton.Equals (EventCallback<string?>.Empty);

    /// <summary>検索フィールドへの参照</summary>
    private MudTextField<string> searchField { get; set; } = new MudTextField<string>();

    /// <summary>検索文字列</summary>
    private string _filterText = string.Empty;

    /// <summary>前回の検索文字列</summary>
    private string _lastFilterText = string.Empty;

    /// <summary>検索フィールドでキーが押された</summary>
    protected void OnKeyUp (KeyboardEventArgs eventArgs) {
        if (eventArgs.Key == "Enter") {
            OnClick();
        }
    }

    /// <summary>検索ボタン(またはフィールドクリアボタン)が押された</summary>
    public void OnClick () {
        if (_lastFilterText != _filterText) {
            OnClickSearchButton.InvokeAsync(_filterText);
            _lastFilterText = _filterText;
            searchField.BlurAsync();
        }
    }

}
